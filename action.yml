name: "AppSweep Mobile Application Security Testing"
description: "Scan your app using AppSweep by Guardsquare, signup at https://guardsquare.com/appsweep-mobile-application-security-testing"
author: "Guardsquare"
inputs:
  appsweep_api_key:
    description: "Your AppSweep API Key, should be stored as a GitHub Secret, do not hardcode your API key in your workflow"
    required: true
  input_file:
    description: "Path to your APK file to upload and scan"
    required: true
  mapping_file:
    description: "The obfuscation mapping file of the build"
    required: false
    default: ""
  tag:
    description: "The tags to append to the build (format: tag1,tag2)"
    required: false
    default: ""
  appsweep_host:
    description: "Host URL of AppSweep"
    required: false
    default: ""
outputs:
  build_id: 
    description: "The build ID of the uploaded scan"
    value: ${{ steps.upload.outputs.build_id }}
runs:
  using: "composite"
  steps:
    - name: Install CLI
      shell: bash
      run: curl --retry 3 --retry-max-time 120 --retry-all-errors -sS https://platform.guardsquare.com/cli/install.sh | sh -s -- --yes
      
    - name: Upload app for scanning
      id: upload
      shell: bash
      env:
        APPSWEEP_API_KEY: ${{ inputs.appsweep_api_key }}
      run: |
        if [ ! -f ${{ inputs.input_file }} ]; then
            echo "App file ${{ inputs.input_file }} not found!"
            exit 1
        fi
        if [ -n "${{ inputs.mapping_file }}" ]; then
          echo "Using mapping file ${{ inputs.mapping_file }}"
          MAPPING_FILE_ARG="--mapping-file ${{ inputs.mapping_file }}"
        else
          MAPPING_FILE_ARG=""
        fi
        if [ -n "${{ inputs.appsweep_host }}" ]; then
          export APPSWEEP_HOST="${{ inputs.appsweep_host }}"
        fi
        echo "Uploading ${{ inputs.input_file }}"

        if [ -n "${{ inputs.tag }}" ]; then
          echo "Using tags ${{ inputs.tag }}"
          BUILD_ID=$(guardsquare scan ${{ inputs.input_file }} --commit-hash ${{ github.sha }} --tag "${{ inputs.tag }}" $MAPPING_FILE_ARG --format '{{.ID}}')
        else
          BUILD_ID=$(guardsquare scan ${{ inputs.input_file }} --commit-hash ${{ github.sha }} $MAPPING_FILE_ARG --format '{{.ID}}')
        fi

        echo "Build details available at: https://appsweep.guardsquare.com/builds/$BUILD_ID"
        echo "build_id=$BUILD_ID" >> "$GITHUB_OUTPUT"
